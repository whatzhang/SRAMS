

/* 论文 */
		charts.setThCateNum(getThCateNum());
		//专利
		charts.setPaCateNum(getPaCateNum());
		//获奖
		charts.setPrCateNum(getPrCateNum());
		//项目
		charts.setProCateNum(getProCateNum());
		charts.setPrMoneyNum(getPrMoneyNum());
		//教材
		charts.setBoCateNum(getboCateNum());
		charts.setBoFontNum(getFontNum());
		//竞赛
		charts.setRaCateNum(getRaCateNum());
		//用户
		charts.setSexNum(getSexNum());
		charts.setAgeNum(getAgeNum());



optionc = {
		    title: {
		        text: '学院科研成果数据',
		        subtext: '',
		        sublink: ''
		    },
		    tooltip: {
		        trigger: 'axis',
		        backgroundColor: 'rgba(255,255,255,0.7)',
		        axisPointer: {
		            type: 'shadow'
		        },
		        formatter: function(params) {
		           
		             var res = '<div style="color: #EE7942;">';
		            res += '<strong>'+ params[0].name +'</strong>'
		            for (var i = 0, l = params.length; i < l; i++) {
		                res += '<br/>' + params[i].seriesName + ' : ' + params[i].value 
		            }
		            res += '</div>';
		            return res;
		        }
		    },
		    legend: {
		        x: 'right',
		        data: ${typeName}
		    },
		    toolbox: {
		        show: true,
		        orient: 'vertical',
		        y: 'center',
		        feature: {
		            mark: {show: true},
		            dataView: {show: true, readOnly: false},
		            restore: {show: true},
		            saveAsImage: {show: true}
		        }
		    },
		    calculable: true,
		    grid: {
		        y: 60,
		        y2: 30,
		        x: 50,
		        x2: 50
		    },
		    xAxis: [
		        {
		            type: 'category',
		            data: ['食品', '衣着', '居住', '家庭设备及用品', '医疗保健', '交通和通信', '文教娱乐服务', '其他', '111', '222', '333', '444']
		        }
		    ],
		    yAxis: [
		        {
		            type: 'value'
		        }
		    ],
		    series: [
		        {
		            name: '论文',
		            type: 'bar',
		            /* itemStyle: itemStyle, */
		            data: [484.7,1444.3,1332.1,908,871.8,1983.7,1627.6,499.2,293,495,1239,1459]
		        },
		        {
		            name: '专利',
		            type: 'bar',
		            data: [506.3,1674.7,1405,1023.2,969,2149.7,1851.7,581.3,956,798,1459,1329]
		        },
		        {
		            name: '获奖',
		            type: 'bar',
		            data: [600.9,1823.4,1484.3,1116.1,1063.7,2455.5,2033.5,657.1,933,755,988,1890]
		        },
		        {
		            name: '项目',
		            type: 'bar',
		            data: [631.9,1902,1745.1,1215.1,1118.3,2736.9,2294,699.4,560,900,456,567]
		        },
		        {
		            name: '教材',
		            type: 'bar',
		            data: [404.7,1444.3,1332.1,908,871.8,1983.7,1627.6,499.2,932,565,1233,956]
		        },
		        {
		            name: '竞赛',
		            type: 'bar',
		            data: [506.3,1674.7,1405,1023.2,969,2149.7,1851.7,581.3,450,670,900,1433]
		        }
		    ]
		};




//var chart = echarts.init(document.getElementById('main'), 'macarons');
var option = {
			title : {
				text : 'ECharts 数据统计'
			},
			tooltip : {},
			legend : {
				data : [ '用户来源' ]
			},
			xAxis : {
				data : [ "Android", "IOS", "PC", "Ohter" ]
			},
			yAxis : {
	
			},
			series : [ {
				name : '访问量',
				type : 'line',
				data : [ 500, 200, 360, 100 ]
			} ]
		};
		var option1 = {
			title : {
				text : 'ECharts 数据统计'
			},
			series : [ {
				name : '访问量',
				type : 'pie',
				radius : '60%',
				data : [
					{
						value : 500,
						name : 'Android'
					},
					{
						value : 200,
						name : 'IOS'
					},
					{
						value : 360,
						name : 'PC'
					},
					{
						value : 100,
						name : 'Ohter'
					}
				]
			} ]
		};
		var myChart = echarts.init(document.getElementById('chartmain'));
		myChart.setOption(option);
		var myChart1 = echarts.init(document.getElementById('chartmain1'));
		myChart1.setOption(option1);






 this.data = data;
        this.pageSize = pageSize;
        
        this.totalCount = data.size();
        this.totalPage = (totalCount + pageSize - 1) / pageSize;
        
        this.firstPage = 1;
        this.prePage = nowPage-1<1?1:nowPage-1;
        this.nowPage = nowPage;
        this.nextPage = nowPage>=totalPage? totalPage: nowPage + 1;
        this.lastPage = totalPage;   
        
        this.startRow = nowPage * pageSize - (pageSize-1);
        this.endRow = nowPage == lastPage? totalCount:nowPage * pageSize;
        
        
        
/* 	thesis = {
					flg : flog,
					xuyuan : $("#xuyuan").val(),
					sex : $("#sex").val(),
					duty : $("#duty").val(),
					bigAge : $("#bigAge").val(),
					smlAge : $("#smlAge").val(),
					major : $("#major").val(),
					bigThda : $("#date").val(),
					smlThda : $("#Cdate").val(),
					thCate : $("#thCate").val(),
					thle : $("#thle").val(),
					thIsCl : $("#thIsCl").val(),
					bigThUp : $("#date1").val(),
					smlThUp : $("#Cdate1").val()
				} */
	/* $.ajax({
		type : "POST",
		url : "${pageContext.request.contextPath}/CountData/" + url,
		data : too,
		dataType : 'json',
		cache : false,
		async : false,
		success : function(data) {
			alert(data.string1+data.string2);
			location.reload();
		},
		error : function(data) {
			alert("获取归纳信息出错!");
		}
	});  */








<div class="modal fade" id="exampleModal" tabindex="-1" role="dialog"
		aria-labelledby="exampleModalLabel" style="margin: 15% 0 0 0;">
		<div class="modal-dialog" role="document" style="width: 18em;">
			<div class="modal-content">
				<form name="delect_user">
					<div class="modal-header">
						<button type="button" class="close" data-dismiss="modal"
							aria-label="Close">
							<span aria-hidden="true">×</span>
						</button>
						<h5 id="exampleModalLabel">确认框</h5>
					</div>
					<div class="modal-body" style="margin: 1.5em 0em 1.5em 0em;">

						<div style="text-align: center; color: #e94e02;">
							<label for="message-text" class="control-label">确定要提交操作？</label>
						</div>
					</div>
					<div class="modal-footer" style="padding-bottom: 0;">
						<button type="submit" class="btn btn-primary">确认</button>
						<button type="reset" class="btn btn-default" data-dismiss="modal">取消</button>
					</div>
				</form>
			</div>
		</div>
	</div>








var select;

function selectAll(check) {

if(check) {

select = true;

} else {

select = false;

}

}

function checkAll(checkboxName) {

var elements = document.getElementsByName(checkboxName);

var temp = document.getElementById("all");

var sss= new Array();

for(var i=0;i<elements.length;i++){

if(elements[i].checked == true){

sss[i] = 1;

}else

sss[i] = 0;

}

if(select) {

temp.checked = true;

for(var i=0; i<elements.length; i++) {

elements[i].checked = true;

}

} else {

temp.checked = false;

for(var i=0; i<elements.length; i++) {

if(sss[i] == 1)

elements[i].checked = false;

else

elements[i].checked = true;

}

}

}



<error-page>
		<!-- 将错误代码(Error Code)或异常(Exception)的种类对应到web应用资源路径. -->
		<error-code>404</error-code>
		<!-- HTTP Error code,例如: 404、403 -->
		<location>/error.jsp</location>
		<!-- 用来设置发生错误或异常时要显示的页面 -->
	</error-page>
	<error-page>
		<exception-type>java.lang.Exception</exception-type>
		<exception-type>NullPointerException</exception-type>
		<exception-type>java.text.ParseException</exception-type>
		<exception-type>FileNotFoundException</exception-type>
		<!-- 设置可能会发生的java异常类型,例如:java.lang.Exception -->
		<location>/error.jsp</location>
		<!-- 用来设置发生错误或异常时要显示的页面 -->
	</error-page>








 var isCh = "ch";
	    var meID = 0;
		function refresh() {
			window.location.href = "${pageContext.request.contextPath}/news/getAdminNews";
		}
		function setReadNum(ww) {
		    document.getElementById('NoRead').innerText = ww.string1;
		    document.getElementById('Readed').innerText = ww.string2;
		    document.getElementById('delNews').innerText = ww.string3;
		    $('NoRead').text(aa);
	        $('Readed').val(bb);
            $('delNews').html(cc);
		}
		function showNewsInfo(daa){
			$.ajax({
				type : "POST",
				url : "${pageContext.request.contextPath}/news/getReadNum",
				data : {
					meId : daa
				},
				dataType : 'json',
				cache : false,
				async : true,
				success : function(data){
				    $('NoRead').text(data.string1);
		            $('Readed').val(data.string2);
		            $('delNews').html(data.string3);
		            document.getElementById("NoRead").innerHTML = data.string1;
				    document.getElementById("Readed").innerHTML = data.string2;
				    document.getElementById("delNews").innerHTML = data.string3;
				},
				error : function(data) {
					alert("获取信息错误!");
				}
			});
		}
		function setMyModel(data) {
			if(isCh == "ch"){
			    $("#meChange input").attr("readonly",false);
			    alert(isCh);
			}
			document.getElementById('title').value = data.meTitle;
			document.getElementById('send').value = data.meSend;
			document.getElementById('resevice').value = data.meReceive;
			document.getElementById('time').value = data.meDate;
			document.getElementById('ab').value = data.meAbout;
			alert("ss"+data.meTitle);
		}
		function getNewsById(meId) {
		    meID = meId;
			$.ajax({
				type : "POST",
				url : "${pageContext.request.contextPath}/news/getNewsById",
				data : {
					meId : meId
				},
				dataType : 'json',
				cache : false,
				async : true,
				success : setMyModel,
				error : function(data) {
					alert("获取信息错误!");
				}
			});
		}
		function rePages() {
			var page = $("#pageSize").val();
			window.location.href = "${pageContext.request.contextPath}/news/getAdminNews?pageSize=" + page;
			window.parent.scrollTo(0, 0);
		}
		function showMessage(meId){
		    alert(meId);
		    isCh = "ch";
			getNewsById(meId);
		}
		function chMessage(id){
		    alert(id);
		    isCh = "ch";
		    getNewsById(id);
		}
		function updataMessage(){
			var aa = document.getElementById('title').value;
			var bb = document.getElementById('send').value;
			var cc = document.getElementById('resevice').value;
			var dd = document.getElementById('time').value;
			var ee = document.getElementById('ab').value;
			 var too ={
			    meId : meID
				meTitle : aa,
				meSend : bb,
				meReceive : cc,
				meDate : dd,
				meAbout : ee
		     }
		    $.ajax({
				type : "POST",
				url : "${pageContext.request.contextPath}/news/updataMessage",
				data : too,
				dataType : 'json',
				cache : false,
				async : true,
				success : function(data){
				    alert("更新成功！");
					window.location.href = "${pageContext.request.contextPath}/news/getAdminNews";
				}
				error : function(data) {
					alert("获取信息错误!");
				}
			});
		}
		function deleteMe(me){
		    $.ajax({
					type : "POST",
					url : "${pageContext.request.contextPath}/news/deleteMessage",
					data : {
						meId : me
					},
					dataType : 'json',
					cache : false,
					async : true,
					success : function(data){
					    alert(data.string1);
						window.location.href = "${pageContext.request.contextPath}/news/getAdminNews";
					}
					error : function(data) {
						alert("获取信息错误!");
					}
				});
		}
		function deleteMessage(me){
		    if(confirm("确定删除此条消息？")){ 
			     alert(me);
			     deleteMe(me);
			}
		}




<error-page>
		<!-- 将错误代码(Error Code)或异常(Exception)的种类对应到web应用资源路径. -->
		<error-code>404</error-code>
		<!-- HTTP Error code,例如: 404、403 -->
		<location>/error.jsp</location>
		<!-- 用来设置发生错误或异常时要显示的页面 -->
	</error-page>
	<error-page>
		<exception-type>java.lang.Exception</exception-type>
		<exception-type>NullPointerException</exception-type>
		<exception-type>java.text.ParseException</exception-type>
		<exception-type>FileNotFoundException</exception-type>
		<!-- 设置可能会发生的java异常类型,例如:java.lang.Exception -->
		<location>/error.jsp</location>
		<!-- 用来设置发生错误或异常时要显示的页面 -->
	</error-page>


ajax请求其实就是三种HTTP错误
404 路径不正确,或者网络问题
500 服务器内部错误,一般为程序代码错误
403 无权访问,出现在跨域请求或者其他..

//var list = eval("("+obj+")"); 将其转换为对象数组 
			//JSON.stringify(obj)
			//window.location.href="url" 
			/* var arr = data.autoAppApplyItemVos;
			if (arr != null) {
				for (var i = 0; i < arr.length; i++) {
					console.log(arr[i].envId + "--" + arr[i].hostAppType + "--" + arr[i].count);
				}
			} */
			
multiple="multiple"			
			
			
error : function(XMLHttpRequest, textStatus, errorThrown) {
	 alert(XMLHttpRequest.status);
	 alert(XMLHttpRequest.readyState);
	 alert(textStatus);
}
XMLHttpRequest.readyState: 状态码的意思
0 － （未初始化）还没有调用send()方法
1 － （载入）已调用send()方法，正在发送请求
2 － （载入完成）send()方法执行完成，已经接收到全部响应内容
3 － （交互）正在解析响应内容
4 － （完成）响应内容解析完成，可以在客户端调用了
举例说明一些错误原因：

1. dataType错误

   类型错误：后台返回的dataType类型和前台写的不一致会跳入error

   格式错误：jquery1.4之后对json的格式要求非常严格，json格式错误也会跳入error.{"test":1} 注意格式

  有时，在不需要返回值的情况下，扔按模板格式，设置了dataType:"json",参数；这时候，ajax传值正确时，出现200返回成功状态下报错的特殊情况。
  
2. async请求同步异步问题

    async默认是true(异步请求),如果想一个Ajax执行完后再执行另一个Ajax, 需要把async=false

    例如，你用post请求传值到另一个页面后台，但是页面一加载你的ajax就已经执行过了，传值接收是在后台才完成的，这时候就请求不到数据，所以可以考虑把ajax请求改为同步试试。

3. data不能不写

   data为空也一定要传"{}"；不然返回的是xml格式的。并提示parsererror. data:"{}"

   parsererror的异常和Header 类型也有关系。及编码header('Content-type: text/html; charset=utf8');

4. 传递的参数

    必须是ajax支持的编码格式

5. URL路径问题

    路径不能有中文
   
   
   
   
   
    
 success:function(data){  
        	if(data=="1"){
    	fbrp.utils.showInfo("提交成功！","ok");
    	setTimeout(function(){
    	//window.location.href="<%=ctx%>/testsuit/suit/suitList.do?edit&id=<%=sId%>";
    	location.href=location;
}, 1000);
    	}else if(data=="0"){
    	fbrp.utils.showInfo("提交失败！","error");
    	}else if(data=="2"){
    	fbrp.utils.showInfo("部分名称已存在！","error");
    	}
        },
        
        
    
    
    
<update   
    id="insertAuthor"   
    parameterType="domain.blog.Author"   
    flushCache="true"   
    statementType="PREPARED"   
    timeout="20000">     
        
/*
	 * @RequestMapping("uploadFile") public void
	 * UploadUserTypeFile(@RequestParam("ID") String id, @RequestParam("type")
	 * String type, @RequestParam("upfile") CommonsMultipartFile file,
	 * HttpSession session) {
	 * this.uploadService.UploadUserTypeFile(Integer.valueOf(id), file, type,
	 * session.getServletContext().getRealPath(config.UPLOADE_URL)); }
	 */        
        
        
  <mapper namespace="userInfoDO">
    <resultMap id="BaseResultMap" type="UserInfoDO">
        <result column="phone_num" property="phoneNum" jdbcType="VARCHAR"/>
        <result column="user_name" property="userName" jdbcType="VARCHAR"/>
        <result column="identity_num" property="identityNum" jdbcType="VARCHAR"/>
    </resultMap>

    <select id="getUserInfo" resultMap="BaseResultMap" parameterType="UserInfoDO">
        select phone_num,user_name,identity_num from tb_user 
        <where>
            <if test="phoneNum!=null and phoneNum!=''">
                phone_num like '%${phoneNum}%'
            </if>
            <if test="userName != '' and userName != null" >
                and user_name like '%${userName}%'
            </if>
            <if test="identityNum != '' and identityNum != null" >
                and identity_num like '%${identityNum}%'
            </if>
         </where>
         limit #{startNum},5 //每页五条数据
    </select>
    
    <select id="getTotalNum" resultType="int" parameterType="UserInfoDO">
        select count(*) from tb_user 
        <where>
            <if test="phoneNum!=null and phoneNum!=''">
                phone_num like '%${phoneNum}%'
            </if>
            <if test="userName != '' and userName != null" >
                and user_name like '%${userName}%'
            </if>
            <if test="identityNum != '' and identityNum != null" >
                and identity_num like '%${identityNum}%'
            </if>
         </where>
    </select>  
</mapper>      
        
        
        
<plugins>
    <!-- com.github.pagehelper.PageHelper为PageHelper类所在包名 -->
    <plugin interceptor="com.github.pagehelper.PageHelper">
        <!-- 4.0.0以后版本可以不设置该参数 -->
        <!--<property name="dialect" value="mysql"/>-->
        <!-- 该参数默认为false -->
        <!-- 设置为true时，会将RowBounds第一个参数offset当成pageNum页码使用 -->
        <!-- 和startPage中的pageNum效果一样-->
        <property name="offsetAsPageNum" value="true"/>
        <!-- 该参数默认为false -->
        <!-- 设置为true时，使用RowBounds分页会进行count查询 -->
        <property name="rowBoundsWithCount" value="true"/>
        <!-- 设置为true时，如果pageSize=0或者RowBounds.limit = 0就会查询出全部的结果 -->
        <!-- （相当于没有执行分页查询，但是返回结果仍然是Page类型）-->
        <property name="pageSizeZero" value="true"/>
        <!-- 3.3.0版本可用 - 分页参数合理化，默认false禁用 -->
        <!-- 启用合理化时，如果pageNum<1会查询第一页，如果pageNum>pages会查询最后一页 -->
        <!-- 禁用合理化时，如果pageNum<1或pageNum>pages会返回空数据 -->
        <property name="reasonable" value="true"/>
        <!-- 3.5.0版本可用 - 为了支持startPage(Object params)方法 -->
        <!-- 增加了一个`params`参数来配置参数映射，用于从Map或ServletRequest中取值 -->
        <!-- 可以配置pageNum,pageSize,count,pageSizeZero,reasonable,orderBy,不配置映射的用默认值 -->
        <!-- 不理解该含义的前提下，不要随便复制该配置 -->
        <!--<property name="params" value="pageNum=start;pageSize=limit;"/>-->
        <!-- 支持通过Mapper接口参数来传递分页参数 -->
        <!--<property name="supportMethodsArguments" value="true"/>-->
        <!-- always总是返回PageInfo类型,check检查返回类型是否为PageInfo,none返回Page -->
        <!--<property name="returnPageInfo" value="check"/>-->
    </plugin>
</plugins>        
        
    
/* function checkFile(){
		        var allowtype =  ["doc","docx","pdf","rar","zip"];
				var filename = $("#upfile").val();  
				if(upThId != null){
					if ($.inArray(filename.substring(filename.lastIndexOf(".")+1,filename.length).toLowerCase(),allowtype) == -1)
					{
					    alert("请输入正确的格式(doc,docx,pdf,rar,zip)");
					    return false;
					}else{
						$("#ID").val(upThId);
					    return true;
					}
				}else{
					alert("选择要上传文件的信息！");
					return false;
				}
			} */    
        
 <%-- <form class="form-horizontal" id="upFile" name="upFile" enctype="multipart/form-data" 
						action="${pageContext.request.contextPath}/upload/uploadFile?type=thesis"
						method="post">
						<input type="hidden" name="ID" id="ID" value=""/>
						<div class="form-group mb-n "
							style="text-align: left; margin-left: 0.08em; ">
							<div style="float: left;">
								<div class="btn btn-default btn-file" title="上传电子文件">
									<input type="file" name="upfile" id="upfile" size="1">
								</div>
								<p class="help-block">(格式为：zip/rar)Max.20MB</p>
							</div>
							<div style="text-align: left; margin-left: 0.08em; ">
								<button style="margin-left: 2em;" type="submit"
									class="btn btn-success" onclick="return checkFile();">上&nbsp;传</button>
							</div>
						</div>
					</form> --%> 

package com.sust.controller;

import java.util.ArrayList;
import java.util.List;

public class AA {

	public static void main(String[] args) {
		
		List<Integer> aa = new ArrayList<Integer>();
		for (int i = 0; i < 7; i++) {
			aa.add(raNum());
		}
		System.out.println(aa.toString());
	}

	private static Integer raNum() {
		
		int num=(int)(Math.random()*34); 
		//暗香操作
		if(num < 28){
			return Integer.valueOf(num);
		}else{
			return raNum();
		}
	}
}
      
        
        
        
        