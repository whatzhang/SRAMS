<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
	id="WebApp_ID" version="3.0">
	<display-name>SRAMS</display-name>
	<welcome-file-list>
		<welcome-file>index.jsp</welcome-file>
	</welcome-file-list>

	<!-- Spring和mybatis的配置文件 -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:spring-mybatis.xml</param-value>
	</context-param>

	<!-- 定义LOG4J监听器 ,打印log放在前面防止出错 -->
	<listener>
		<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
	</listener>

	<!-- log4jConfigLocation：log4j配置文件存放路径 -->
	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>classpath:log4j.properties</param-value>
	</context-param>

	<!-- Spring监听器 -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<!-- 防止Spring内存溢出监听器 -->
	<listener>
		<listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
	</listener>

	<!-- 配置SpringMVC核心控制器 -->
	<servlet>
		<servlet-name>springMVC</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>

		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:spring-mvc.xml</param-value>
		</init-param>
		<!-- 启动加载一次 -->
		<load-on-startup>1</load-on-startup>
		<!--设置是否启用异步支持 -->
		<async-supported>true</async-supported>
	</servlet>

	<!--为DispatcherServlet建立映射 -->
	<servlet-mapping>
		<servlet-name>springMVC</servlet-name>
		<!-- 此处可以可以配置成*.do 适配Struts的习惯 -->
		<url-pattern>/</url-pattern>
	</servlet-mapping>

	<!-- 解决工程编码过滤器 -->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- sessionfilter -->
	<filter>
		<filter-name>sessionFilter</filter-name>
		<filter-class>com.sust.other.SessionFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>sessionFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!--以上截止sessionfilter -->
	<!--设定某种扩展名的文件用一种应用程序来打开的方式类型，当该扩展名文件被访问的时候，浏览器会自动使用指定应用程序来打开 -->
	<!-- <mime-mapping> <extension>*.ppt</extension> 扩展名名称 <mime-type>application/mspowerpoint</mime-type> 
		MIME格式 </mime-mapping> -->

	<!-- <session-config>如果某个会话在一定时间未被访问，则服务器可以扔掉以节约内存 <session-timeout>120</session-timeout> 
		</session-config> <error-page> 将错误代码(Error Code)或异常(Exception)的种类对应到web应用资源路径. 
		<error-code>404</error-code> HTTP Error code,例如: 404、403 <location>/error.jsp</location> 
		用来设置发生错误或异常时要显示的页面 </error-page> <error-page> <exception-type>java.lang.Exception</exception-type>设置可能会发生的java异常类型,例如:java.lang.Exception 
		<location>/error.jsp</location> 用来设置发生错误或异常时要显示的页面 </error-page> -->

</web-app>